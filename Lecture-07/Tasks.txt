1. დაწერე ფუნქცია რომელიც მიიღებს დაყოვნებას, შექმნის პრომისს და დააბრუნებს რეზულტატს პრომისის სახით. ამ ფუნქციაზე შესაძლებელი უნდა იყოს დაჩეინება. მაგ: setTimeout ფუნქცია იყენებს callback-ს, დაწერეთ მისი promise-ზე დაფუძნებული ალტერნატივა. მაგ: mySetTimeout(delay).then(...).

2. დავუშვათ არსებობს სათამაშოების ქარხანა რომელიც ამზადებს სათამაშოს და გარკვეული შანსია რომ ეს სათამაშო იყოს დეფექტური. თუ დეფექტურია მაშინ ვაბრუნებთ, თუ ვარგისია გაგვაქვს გასაყიდად. ანუ ველოდებით დამზადების რეზულტატს და მერე ამის შემდეგ ვასრულებთ მომდევნო ოპერაციას. გამოიყენეთ პირველ დავალებაში დაწერილი ფუნქცია მიმდინარე დავალების გასავრცობად:

 1. სათამაშოს დამზადებას სჭირდება 3 წამი. დროის მითითება შესაძლებელი უნდა იყოს დინამიურად.
 2. დავამატოთ ახალი ნაბიჯი რომელსაც დავარქმევთ deliverToys, რომლის დაყოვნებაც 2 წამია. (გადაეცემა დინამიურად)
 3. სათამაშოს გაყიდვას სჭირდება 1 წამი. (დინამიურად)

 ყოველი მომდევნო ნაბიჯი უნდა ელოდებოდეს წინა ნაბიჯის რეზულტატს და შესაბამისად წყვეტდეს მოხდება თუ არა მისი შესრულება. გამოიყენეთ then/catch და async/await სინტაქსები.(2 ვარიანტი).

